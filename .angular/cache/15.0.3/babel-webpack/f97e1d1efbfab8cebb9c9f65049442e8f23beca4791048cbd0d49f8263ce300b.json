{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CartComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nexport class CartComponent {\n  constructor() {\n    // when components load, get cart from local storage\n    this.items = this.getCart();\n  }\n  ngOnInit() {}\n  // get cart from local storage\n  getCart() {\n    return JSON.parse(localStorage.getItem('cart') || '{}');\n  }\n  // add buttons to add or remove quantities to carts\n  // add to cart\n  addToCart(product) {\n    let cart = [];\n    if (localStorage.getItem('cart') !== null) {\n      cart = JSON.parse(localStorage.getItem('cart') || '{}');\n      cart = [product, ...cart];\n    } else {\n      cart = [product];\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n    console.table(cart);\n    this.items = this.getCart();\n  }\n  // remove from cart\n  removeFromCart(product) {\n    let cart = [];\n    if (localStorage.getItem('cart') !== null) {\n      cart = JSON.parse(localStorage.getItem('cart') || '{}');\n      const index = cart.indexOf(product);\n      cart = cart.splice(index, 1);\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n    this.items = this.getCart();\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)();\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 8,\n  vars: 4,\n  consts: [[\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"cart-row\"], [1, \"cart-item\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"represent the cart as a grid with the quantities\\nin the first column and the product names in the second column.\\nThe total price is displayed in the last row.\\n\");\n      i0.ɵɵtemplate(1, CartComponent_div_1_Template, 5, 2, \"div\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"span\");\n      i0.ɵɵtext(4, \"Total\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"span\");\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"currency\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 2, ctx.items.totalPrice));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAGAA,8BAAkD;IACxCA,YAAiB;IAAAA,iBAAO;IAC9BA,4BAAM;IAAAA,YAAa;IAAAA,iBAAO;;;;IADpBA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAa;IAAbA,kCAAa;;;ACGvB,OAAM,MAAOC,aAAa;EAIxBC;IAHA;IACA,UAAK,GAAG,IAAI,CAACC,OAAO,EAAE;EAEN;EAEhBC,QAAQ,IAAW;EAEnB;EACAD,OAAO;IACL,OAAOE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;EACzD;EAEA;EACA;EACAC,SAAS,CAACC,OAAgB;IACxB,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;MACzCG,IAAI,GAAGN,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;MACvDG,IAAI,GAAG,CAACD,OAAO,EAAE,GAAGC,IAAI,CAAC;KAC1B,MAAM;MACLA,IAAI,GAAG,CAACD,OAAO,CAAC;;IAElBH,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACF,IAAI,CAAC,CAAC;IAClDG,OAAO,CAACC,KAAK,CAACJ,IAAI,CAAC;IAEnB,IAAI,CAACK,KAAK,GAAG,IAAI,CAACb,OAAO,EAAE;EAC7B;EAEA;EACAc,cAAc,CAACP,OAAgB;IAC7B,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;MACzCG,IAAI,GAAGN,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;MAEvD,MAAMU,KAAK,GAAGP,IAAI,CAACQ,OAAO,CAACT,OAAO,CAAC;MAEnCC,IAAI,GAAGA,IAAI,CAACS,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;IAE9BX,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACF,IAAI,CAAC,CAAC;IAElD,IAAI,CAACK,KAAK,GAAG,IAAI,CAACb,OAAO,EAAE;EAC7B;;AA1CWF,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BzB,kLAGA;MAAAA,8DAGM;MACNA,8BAAsB;MACZA,qBAAK;MAAAA,iBAAO;MAClBA,4BAAM;MAAAA,YAA+B;;MAAAA,iBAAO;;;MANRA,eAAQ;MAARA,mCAAQ;MAMtCA,eAA+B;MAA/BA,gEAA+B","names":["i0","CartComponent","constructor","getCart","ngOnInit","JSON","parse","localStorage","getItem","addToCart","product","cart","setItem","stringify","console","table","items","removeFromCart","index","indexOf","splice","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/adrian-paulcarrieres/Documents/Efrei/Angular/my-shop/src/app/cart/cart.component.html","/Users/adrian-paulcarrieres/Documents/Efrei/Angular/my-shop/src/app/cart/cart.component.ts"],"sourcesContent":["represent the cart as a grid with the quantities\nin the first column and the product names in the second column.\nThe total price is displayed in the last row.\n<div class=\"cart-item\" *ngFor=\"let item of items\">\n    <span>{{item.quantity}}</span>\n    <span>{{item.name}}</span>\n</div>\n<div class=\"cart-row\">\n    <span>Total</span>\n    <span>{{items.totalPrice | currency}}</span>\n</div>\n\n","import { Component } from '@angular/core';\nimport { Product } from '../models/product';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n  // when components load, get cart from local storage\n  items = this.getCart();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  // get cart from local storage\n  getCart() {\n    return JSON.parse(localStorage.getItem('cart') || '{}');\n  }\n\n  // add buttons to add or remove quantities to carts\n  // add to cart\n  addToCart(product: Product) {\n    let cart = [];\n    if (localStorage.getItem('cart') !== null) {\n      cart = JSON.parse(localStorage.getItem('cart') || '{}');\n      cart = [product, ...cart];\n    } else {\n      cart = [product];\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n    console.table(cart);\n\n    this.items = this.getCart();\n  }\n\n  // remove from cart\n  removeFromCart(product: Product) {\n    let cart = [];\n    if (localStorage.getItem('cart') !== null) {\n      cart = JSON.parse(localStorage.getItem('cart') || '{}');\n\n      const index = cart.indexOf(product);\n\n      cart = cart.splice(index, 1);\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n\n    this.items = this.getCart();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}